// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using produccion.Data;

#nullable disable

namespace produccion.Data.Migrations
{
    [DbContext(typeof(ProducionContext))]
    partial class ProducionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("InsumoProveedor", b =>
                {
                    b.Property<int>("IdInsumoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedorFk")
                        .HasColumnType("int");

                    b.HasKey("IdInsumoFk", "IdProveedorFk")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdProveedorFk" }, "IX_insumo_proveedor_IdProveedorFk");

                    b.ToTable("insumo_proveedor", (string)null);
                });

            modelBuilder.Entity("InventarioTalla", b =>
                {
                    b.Property<int>("IdInvFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.HasKey("IdInvFk", "IdTallaFk")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdTallaFk" }, "IX_inventario_talla_IdTallaFk");

                    b.ToTable("inventario_talla", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<double>("SueldoBase")
                        .HasColumnType("double")
                        .HasColumnName("sueldo_base");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("cargo", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("IdCliente")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersonaFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IX_cliente_IdMunicipioFk");

                    b.HasIndex(new[] { "IdTipoPersonaFk" }, "IX_cliente_IdTipoPersonaFk");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("color", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPaisFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPaisFk" }, "IX_departamento_IdPaisFk");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.DetalleOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadProducida")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_producida");

                    b.Property<int>("CantidadProducir")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_producir");

                    b.Property<int>("IdColorFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenFk")
                        .HasColumnType("int");

                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.Property<int>("PrendaId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdColorFk" }, "IX_detalle_orden_IdColorFk");

                    b.HasIndex(new[] { "IdEstadoFk" }, "IX_detalle_orden_IdEstadoFk");

                    b.HasIndex(new[] { "IdOrdenFk" }, "IX_detalle_orden_IdOrdenFk");

                    b.HasIndex(new[] { "PrendaId" }, "IX_detalle_orden_PrendaId");

                    b.ToTable("detalle_orden", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdProductoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdVentaFk")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnit")
                        .HasColumnType("double")
                        .HasColumnName("valor_unit");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdProductoFk" }, "IX_detalle_venta_IdProductoFk");

                    b.HasIndex(new[] { "IdTallaFk" }, "IX_detalle_venta_IdTallaFk");

                    b.HasIndex(new[] { "IdVentaFk" }, "IX_detalle_venta_IdVentaFk");

                    b.ToTable("detalle_venta", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("fecha_ingreso");

                    b.Property<int>("IdCargoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCargoFk" }, "IX_empleado_IdCargoFk");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IX_empleado_IdMunicipioFk");

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nit");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("text")
                        .HasColumnName("razon_social");

                    b.Property<string>("RepresentanteLegal")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("representante_legal");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IX_empresa_IdMunicipioFk");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdTipoEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoEstadoFk" }, "IX_estado_IdTipoEstadoFk");

                    b.ToTable("estado", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("forma_pago", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("genero", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<double>("StockMax")
                        .HasColumnType("double")
                        .HasColumnName("stock_max");

                    b.Property<double>("StockMin")
                        .HasColumnType("double")
                        .HasColumnName("stock_min");

                    b.Property<double>("ValorUnit")
                        .HasColumnType("double")
                        .HasColumnName("valor_unit");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("insumo", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.InsumoPrenda", b =>
                {
                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumoFk")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdPrendaFk", "IdInsumoFk")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdInsumoFk" }, "IX_insumo_prendas_IdInsumoFk");

                    b.ToTable("insumo_prendas", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodInv")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdPrendaFk")
                        .HasColumnType("int");

                    b.Property<double>("ValorVtaCop")
                        .HasColumnType("double");

                    b.Property<double>("ValorVtaUsd")
                        .HasColumnType("double");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPrendaFk" }, "IX_inventario_IdPrendaFk");

                    b.ToTable("inventario", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamentoFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDepartamentoFk" }, "IX_municipio_IdDepartamentoFk");

                    b.ToTable("municipio", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdClienteFk" }, "IX_orden_IdClienteFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IX_orden_IdEmpleadoFk");

                    b.HasIndex(new[] { "IdEstadoFk" }, "IX_orden_IdEstadoFk");

                    b.ToTable("orden", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Prenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdGeneroFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoProteccion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("ValorUnitCop")
                        .HasColumnType("double");

                    b.Property<double>("ValorUnitUsd")
                        .HasColumnType("double");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstadoFk" }, "IX_prenda_IdEstadoFk");

                    b.HasIndex(new[] { "IdGeneroFk" }, "IX_prenda_IdGeneroFk");

                    b.HasIndex(new[] { "IdTipoProteccion" }, "IX_prenda_IdTipoProteccion");

                    b.ToTable("prenda", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<string>("NitProveedor")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IX_proveedor_IdMunicipioFk");

                    b.HasIndex(new[] { "IdTipoPersona" }, "IX_proveedor_IdTipoPersona");

                    b.HasIndex(new[] { "NitProveedor" }, "IX_proveedor_NitProveedor")
                        .IsUnique();

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Talla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("talla", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.TipoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipo_estado", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipo_persona", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.TipoProteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipo_proteccion", (string)null);
                });

            modelBuilder.Entity("produccion.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPagoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdClienteFk" }, "IX_venta_IdClienteFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IX_venta_IdEmpleadoFk");

                    b.HasIndex(new[] { "IdFormaPagoFk" }, "IX_venta_IdFormaPagoFk");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("InsumoProveedor", b =>
                {
                    b.HasOne("produccion.Entities.Insumo", null)
                        .WithMany()
                        .HasForeignKey("IdInsumoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("IdProveedorFk")
                        .IsRequired();
                });

            modelBuilder.Entity("InventarioTalla", b =>
                {
                    b.HasOne("produccion.Entities.Inventario", null)
                        .WithMany()
                        .HasForeignKey("IdInvFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Talla", null)
                        .WithMany()
                        .HasForeignKey("IdTallaFk")
                        .IsRequired();
                });

            modelBuilder.Entity("produccion.Entities.Cliente", b =>
                {
                    b.HasOne("produccion.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.TipoPersona", "IdTipoPersonaFkNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoPersonaFk")
                        .IsRequired();

                    b.Navigation("IdMunicipioFkNavigation");

                    b.Navigation("IdTipoPersonaFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Departamento", b =>
                {
                    b.HasOne("produccion.Entities.Pais", "IdPaisFkNavigation")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdPaisFk")
                        .IsRequired();

                    b.Navigation("IdPaisFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.DetalleOrden", b =>
                {
                    b.HasOne("produccion.Entities.Color", "IdColorFkNavigation")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdColorFk")
                        .IsRequired()
                        .HasConstraintName("FK_detalle_orden_Color_IdColorFk");

                    b.HasOne("produccion.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdEstadoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Orden", "IdOrdenFkNavigation")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdOrdenFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Prenda", "Prenda")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("PrendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdColorFkNavigation");

                    b.Navigation("IdEstadoFkNavigation");

                    b.Navigation("IdOrdenFkNavigation");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("produccion.Entities.DetalleVenta", b =>
                {
                    b.HasOne("produccion.Entities.Inventario", "IdProductoFkNavigation")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdProductoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Talla", "IdTallaFkNavigation")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdTallaFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Venta", "IdVentaFkNavigation")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdVentaFk")
                        .IsRequired();

                    b.Navigation("IdProductoFkNavigation");

                    b.Navigation("IdTallaFkNavigation");

                    b.Navigation("IdVentaFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Empleado", b =>
                {
                    b.HasOne("produccion.Entities.Cargo", "IdCargoFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCargoFk")
                        .IsRequired()
                        .HasConstraintName("FK_empleado_Cargos_IdCargoFk");

                    b.HasOne("produccion.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired();

                    b.Navigation("IdCargoFkNavigation");

                    b.Navigation("IdMunicipioFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Empresa", b =>
                {
                    b.HasOne("produccion.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired();

                    b.Navigation("IdMunicipioFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Estado", b =>
                {
                    b.HasOne("produccion.Entities.TipoEstado", "IdTipoEstadoFkNavigation")
                        .WithMany("Estados")
                        .HasForeignKey("IdTipoEstadoFk")
                        .IsRequired();

                    b.Navigation("IdTipoEstadoFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.InsumoPrenda", b =>
                {
                    b.HasOne("produccion.Entities.Insumo", "IdInsumoFkNavigation")
                        .WithMany("InsumoPrendas")
                        .HasForeignKey("IdInsumoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Prenda", "IdPrendaFkNavigation")
                        .WithMany("InsumoPrendas")
                        .HasForeignKey("IdPrendaFk")
                        .IsRequired();

                    b.Navigation("IdInsumoFkNavigation");

                    b.Navigation("IdPrendaFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Inventario", b =>
                {
                    b.HasOne("produccion.Entities.Prenda", "IdPrendaFkNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdPrendaFk")
                        .IsRequired();

                    b.Navigation("IdPrendaFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Municipio", b =>
                {
                    b.HasOne("produccion.Entities.Departamento", "IdDepartamentoFkNavigation")
                        .WithMany("Municipios")
                        .HasForeignKey("IdDepartamentoFk")
                        .IsRequired();

                    b.Navigation("IdDepartamentoFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Orden", b =>
                {
                    b.HasOne("produccion.Entities.Cliente", "IdClienteFkNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdClienteFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Empleado", "IdEmpleadoFkNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpleadoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEstadoFk")
                        .IsRequired();

                    b.Navigation("IdClienteFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdEstadoFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Prenda", b =>
                {
                    b.HasOne("produccion.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("Prendas")
                        .HasForeignKey("IdEstadoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Genero", "IdGeneroFkNavigation")
                        .WithMany("Prendas")
                        .HasForeignKey("IdGeneroFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.TipoProteccion", "IdTipoProteccionNavigation")
                        .WithMany("Prendas")
                        .HasForeignKey("IdTipoProteccion")
                        .IsRequired();

                    b.Navigation("IdEstadoFkNavigation");

                    b.Navigation("IdGeneroFkNavigation");

                    b.Navigation("IdTipoProteccionNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Proveedor", b =>
                {
                    b.HasOne("produccion.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.TipoPersona", "IdTipoPersonaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdTipoPersona")
                        .IsRequired();

                    b.Navigation("IdMunicipioFkNavigation");

                    b.Navigation("IdTipoPersonaNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Venta", b =>
                {
                    b.HasOne("produccion.Entities.Cliente", "IdClienteFkNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdClienteFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.Empleado", "IdEmpleadoFkNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdEmpleadoFk")
                        .IsRequired();

                    b.HasOne("produccion.Entities.FormaPago", "IdFormaPagoFkNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdFormaPagoFk")
                        .IsRequired();

                    b.Navigation("IdClienteFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdFormaPagoFkNavigation");
                });

            modelBuilder.Entity("produccion.Entities.Cargo", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("produccion.Entities.Cliente", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("produccion.Entities.Color", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("produccion.Entities.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("produccion.Entities.Empleado", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("produccion.Entities.Estado", b =>
                {
                    b.Navigation("DetalleOrdenes");

                    b.Navigation("Ordenes");

                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("produccion.Entities.FormaPago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("produccion.Entities.Genero", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("produccion.Entities.Insumo", b =>
                {
                    b.Navigation("InsumoPrendas");
                });

            modelBuilder.Entity("produccion.Entities.Inventario", b =>
                {
                    b.Navigation("DetalleVentas");
                });

            modelBuilder.Entity("produccion.Entities.Municipio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Empresas");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("produccion.Entities.Orden", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("produccion.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("produccion.Entities.Prenda", b =>
                {
                    b.Navigation("DetalleOrdenes");

                    b.Navigation("InsumoPrendas");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("produccion.Entities.Talla", b =>
                {
                    b.Navigation("DetalleVentas");
                });

            modelBuilder.Entity("produccion.Entities.TipoEstado", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("produccion.Entities.TipoPersona", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("produccion.Entities.TipoProteccion", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("produccion.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
